/*
Daytona Server API

Daytona Server API

API version: 0.24.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiclient

import (
	"encoding/json"
)

// checks if the GithubComDaytonaioDaytonaPkgWorkspaceProjectConfigPrebuildFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GithubComDaytonaioDaytonaPkgWorkspaceProjectConfigPrebuildFilter{}

// GithubComDaytonaioDaytonaPkgWorkspaceProjectConfigPrebuildFilter struct for GithubComDaytonaioDaytonaPkgWorkspaceProjectConfigPrebuildFilter
type GithubComDaytonaioDaytonaPkgWorkspaceProjectConfigPrebuildFilter struct {
	ProjectConfigName *string `json:"projectConfigName,omitempty"`
}

// NewGithubComDaytonaioDaytonaPkgWorkspaceProjectConfigPrebuildFilter instantiates a new GithubComDaytonaioDaytonaPkgWorkspaceProjectConfigPrebuildFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGithubComDaytonaioDaytonaPkgWorkspaceProjectConfigPrebuildFilter() *GithubComDaytonaioDaytonaPkgWorkspaceProjectConfigPrebuildFilter {
	this := GithubComDaytonaioDaytonaPkgWorkspaceProjectConfigPrebuildFilter{}
	return &this
}

// NewGithubComDaytonaioDaytonaPkgWorkspaceProjectConfigPrebuildFilterWithDefaults instantiates a new GithubComDaytonaioDaytonaPkgWorkspaceProjectConfigPrebuildFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGithubComDaytonaioDaytonaPkgWorkspaceProjectConfigPrebuildFilterWithDefaults() *GithubComDaytonaioDaytonaPkgWorkspaceProjectConfigPrebuildFilter {
	this := GithubComDaytonaioDaytonaPkgWorkspaceProjectConfigPrebuildFilter{}
	return &this
}

// GetProjectConfigName returns the ProjectConfigName field value if set, zero value otherwise.
func (o *GithubComDaytonaioDaytonaPkgWorkspaceProjectConfigPrebuildFilter) GetProjectConfigName() string {
	if o == nil || IsNil(o.ProjectConfigName) {
		var ret string
		return ret
	}
	return *o.ProjectConfigName
}

// GetProjectConfigNameOk returns a tuple with the ProjectConfigName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComDaytonaioDaytonaPkgWorkspaceProjectConfigPrebuildFilter) GetProjectConfigNameOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectConfigName) {
		return nil, false
	}
	return o.ProjectConfigName, true
}

// HasProjectConfigName returns a boolean if a field has been set.
func (o *GithubComDaytonaioDaytonaPkgWorkspaceProjectConfigPrebuildFilter) HasProjectConfigName() bool {
	if o != nil && !IsNil(o.ProjectConfigName) {
		return true
	}

	return false
}

// SetProjectConfigName gets a reference to the given string and assigns it to the ProjectConfigName field.
func (o *GithubComDaytonaioDaytonaPkgWorkspaceProjectConfigPrebuildFilter) SetProjectConfigName(v string) {
	o.ProjectConfigName = &v
}

func (o GithubComDaytonaioDaytonaPkgWorkspaceProjectConfigPrebuildFilter) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GithubComDaytonaioDaytonaPkgWorkspaceProjectConfigPrebuildFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProjectConfigName) {
		toSerialize["projectConfigName"] = o.ProjectConfigName
	}
	return toSerialize, nil
}

type NullableGithubComDaytonaioDaytonaPkgWorkspaceProjectConfigPrebuildFilter struct {
	value *GithubComDaytonaioDaytonaPkgWorkspaceProjectConfigPrebuildFilter
	isSet bool
}

func (v NullableGithubComDaytonaioDaytonaPkgWorkspaceProjectConfigPrebuildFilter) Get() *GithubComDaytonaioDaytonaPkgWorkspaceProjectConfigPrebuildFilter {
	return v.value
}

func (v *NullableGithubComDaytonaioDaytonaPkgWorkspaceProjectConfigPrebuildFilter) Set(val *GithubComDaytonaioDaytonaPkgWorkspaceProjectConfigPrebuildFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableGithubComDaytonaioDaytonaPkgWorkspaceProjectConfigPrebuildFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableGithubComDaytonaioDaytonaPkgWorkspaceProjectConfigPrebuildFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGithubComDaytonaioDaytonaPkgWorkspaceProjectConfigPrebuildFilter(val *GithubComDaytonaioDaytonaPkgWorkspaceProjectConfigPrebuildFilter) *NullableGithubComDaytonaioDaytonaPkgWorkspaceProjectConfigPrebuildFilter {
	return &NullableGithubComDaytonaioDaytonaPkgWorkspaceProjectConfigPrebuildFilter{value: val, isSet: true}
}

func (v NullableGithubComDaytonaioDaytonaPkgWorkspaceProjectConfigPrebuildFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGithubComDaytonaioDaytonaPkgWorkspaceProjectConfigPrebuildFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
